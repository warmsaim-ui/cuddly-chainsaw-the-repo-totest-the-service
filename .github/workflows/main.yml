name: Setup ngrok and Remote Desktop

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  setup-ngrok:
    runs-on: windows-latest
    timeout-minutes: 360  # GitHub Actions max limit

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Download ngrok
      run: |
        Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip
        if (!(Test-Path -Path ngrok.zip)) { throw "Failed to download ngrok" }

    - name: Extract ngrok
      run: |
        Expand-Archive ngrok.zip -DestinationPath .
        if (!(Test-Path -Path .\ngrok.exe)) { throw "Failed to extract ngrok" }

    - name: Update ngrok
      run: .\ngrok.exe update

    - name: Authenticate with ngrok
      run: .\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Enable Remote Desktop
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
        Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)
        if (!(Get-LocalUser -Name "runneradmin")) { throw "Failed to create user" }

    - name: Create ngrok tunnel to remote desktop
      run: |
        .\ngrok.exe tcp 3389
        if ($LASTEXITCODE -ne 0) { throw "Failed to create ngrok tunnel" }

    - name: Log ngrok tunnel URL
      run: |
        # Get public ngrok endpoint
        $retry = 0
        $tcpUrl = ""
        while ($retry -lt 10) {
          try {
            $tunnelStatus = Invoke-RestMethod http://localhost:4040/api/tunnels -ErrorAction SilentlyContinue
            if ($tunnelStatus.tunnels) {
              $tcpUrl = $tunnelStatus.tunnels | Where-Object { $_.proto -eq "tcp" } | Select-Object -ExpandProperty public_url
              if ($tcpUrl) { break }
            }
          } catch { }
          Start-Sleep -Seconds 2
          $retry++
        }

        if (-not $tcpUrl) {
          throw "Could not get ngrok endpoint"
        }

        $rdpAddress = $tcpUrl -replace '^tcp://',''
        Write-Host "==============================================="
        Write-Host "Ngrok RDP Address : $rdpAddress"
        Write-Host "Username          : runneradmin"
        Write-Host "Password          : P@ssw0rd!"
        Write-Host "==============================================="
